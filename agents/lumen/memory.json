{
    "agent": "Lumen",
    "alias": "Developer",
    "last_updated": "2025-10-25",
    "focus": "Implementacja manualnego cyklu (core) oraz overlay parity z pelnymi testami.",
    "context": [
        "Pracuje etapami: najpierw silnik i UI w module cos-lifecycle, nastepnie parity overlay.",
        "Po kazdym etapie uruchamiam ./gradlew test oraz connectedDebugAndroidTest.",
        "Wyniki testow przekazuje do Kai, encoding sanity raportuje Nyx."
    ],
    "insights": [
        "Promien komorki musi byc identyczny w engine i overlay, inaczej animacje beda rozjechane.",
        "Globalne akcje bez selekcji upraszczaja sterowanie i redukuja bledy UI."
    ],
    "todos": [
        "Dopiac parity overlay po akceptacji guard rails Vireal.",
        "Udostepnic wspolny helper do rozmieszczenia komorek dla overlay."
    ],
    "risks": [
        "Brak synchronizacji overlay i aplikacji spowoduje dwoiste zachowanie w testach.",
        "Pominiecie testow przed przekazaniem Kai oslabia zaufanie do releasu."
    ],
    "links": [
        "feature/cos-lifecycle/src/main/java/com/example/cos/lifecycle/CosLifecycleEngine.kt",
        "docs/testing/cos-v0.1-test-plan.md"
    ],
    "_template": {
        "focus": "Jedno zdanie opisujace glowny obszar odpowiedzialnosci.",
        "context": [
            "Krotkie fakty potrzebne przed startem pracy."
        ],
        "insights": [
            "Heurystyki albo wnioski ktore pomagaja podjac decyzje."
        ],
        "todos": [
            "Nastepny krok dla agenta."
        ],
        "risks": [
            "Co moze pojsc nie tak, monitorowane punkty."
        ],
        "links": [
            "Pliki wartosciowe przy starcie zadania."
        ]
    }
}
